<?xml version='1.0' encoding='UTF-8'?>
<!-- Schema file written by PDE -->
<schema targetNamespace="pa.iscde.callgraph" xmlns="http://www.w3.org/2001/XMLSchema">
<annotation>
      <appinfo>
         <meta.schema plugin="pa.iscde.callgraph" id="exportAsProvider" name="Export CallGraph"/>
      </appinfo>
      <documentation>
         This extension allows you to receive the Call Graph diagram structure and process it as you want.
      </documentation>
   </annotation>

   <element name="extension">
      <annotation>
         <appinfo>
            <meta.element />
         </appinfo>
      </annotation>
      <complexType>
         <sequence>
            <element ref="exportAs"/>
         </sequence>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
               <appinfo>
                  <meta.attribute translatable="true"/>
               </appinfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="exportAs">
      <complexType>
         <attribute name="name" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="class" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
               <appinfo>
                  <meta.attribute kind="java" basedOn=":pa.iscde.callgraph.extensibility.ExportButton"/>
               </appinfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <annotation>
      <appinfo>
         <meta.section type="since"/>
      </appinfo>
      <documentation>
         09/12/2014
      </documentation>
   </annotation>

   <annotation>
      <appinfo>
         <meta.section type="examples"/>
      </appinfo>
      <documentation>
         public void export(MethodDeclaration selectedMethod,
			ArrayList&lt;MethodDeclaration&gt; aboveMethods,
			ArrayList&lt;MethodInvocation&gt; belowMethods, Display display) {
		System.out.println(&quot;sou o plugin: &quot; + &quot;Metodo: &quot; + selectedMethod);
		for (MethodDeclaration methodDeclaration : aboveMethods) {
			System.out.println(&quot;MD:&quot; + methodDeclaration.getName().toString());
		}
		
		for (MethodInvocation methodInvocation : belowMethods) {
			System.out.println(&quot;MI: &quot; + methodInvocation.getName().toString());
		}
		
		
		Shell shell = new Shell(display);
		shell.setMinimumSize(200, 50);
		shell.setText(&quot;Plugin janela&quot;);
		shell.pack();
		shell.open();
	}
      </documentation>
   </annotation>

   <annotation>
      <appinfo>
         <meta.section type="apiinfo"/>
      </appinfo>
      <documentation>
         You will need to implement ExportButton and override the export(Method, List, List) method. The display object can be useful if you need to create a new window (browse, for example). The Call Graph structure is explained in the javadoc documentation.
      </documentation>
   </annotation>

   <annotation>
      <appinfo>
         <meta.section type="implementation"/>
      </appinfo>
      <documentation>
         [Enter information about supplied implementation of this extension point.]
      </documentation>
   </annotation>


</schema>
